#!/bin/bash -e

Name=$(basename $0)
DirName=$(dirname $0)
DockerFilesDir=${DirName}/dockerfiles
TestsDir=${DirName}/tests
SystemsList=${Name}.list
RoleDir=/etc/ansible/roles
Role=${RoleDir}/role_under_test
Tag=validator

function _echo() {
  echo -e "$(date +%d%m%Y-%H:%M:%S) * $1 "
}

function build(){
  typeset system=$1

  _echo "build ${system} in progress..."
  docker build --file=${DockerFilesDir}/${system} --tag=${system}:${Tag} ${DockerFilesDir}
}

function clean(){
  typeset id=$1

  alive=$(docker ps -q --filter="name=${id}")
  if [ ${alive} ] ; then
    docker stop ${id}
    docker rm   ${id}
  fi
}

function run() {
  typeset system=$1
  typeset test=$2
  typeset run_opts=""
  typeset init=/sbin/init
  typeset prefix="${system} - ${test}"
  
  _echo "*** ${prefix} in progress..."

  container_name="${Tag}_$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c${1:-8})"
  container_id=$(mktemp)
  _echo "container_id=${container_id} * container_name=${container_name}"

  _echo "${prefix} - Initialisation and requirements."
  docker run --detach --volume="${PWD}":${Role}:ro ${run_opts} --name="${container_name}" \
         --volume $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent \
         ${system}:${Tag} "${init}" > "${container_id}"
  docker exec "$(cat ${container_id})" python ${Role}/requirements.py ${Role}

  _echo "${prefix} - Ansible syntax check."
  docker exec --tty "$(cat ${container_id})" env TERM=xterm \
         ansible-playbook ${Role}/tests/${test} --syntax-check

  _echo "${prefix} - Test role."
  docker exec --tty "$(cat ${container_id})" env TERM=xterm \
         ansible-playbook ${Role}/tests/${test} --verbose

  _echo "${prefix} - Test role idempotence."
  idempotence=$(mktemp)
  docker exec --tty "$(cat ${container_id})" env TERM=xterm \
         ansible-playbook ${Role}/tests/${test} --verbose | tee -a ${idempotence}

  tail ${idempotence} \
  | grep -q 'changed=0.*failed=0' \
  && (echo 'Idempotence test: pass' && exit 0) \
  || (echo 'Idempotence test: fail' && exit 1)

  _echo "*** ${prefix} done."
  _echo "container_id=${container_id}: $(cat ${container_id})"
  clean $(cat ${container_id})
}

### MAIN ###

if [ ! -s ${SystemsList} ] ; then
  ls -1 ${DockerFilesDir} > ${SystemsList}
fi

_echo "Checking tests..."
if [ ! -d ${TestsDir} ] ; then
  mkdir tests
fi
if [ ! "$(ls -A ${TestsDir})" ]; then
  cp defaults/test.yml tests/
fi

cat ${SystemsList} | \
while read system
do
  build ${system}
  for test in $(ls -1 ${TestsDir})
  do
    run ${system} ${test}
  done
done
